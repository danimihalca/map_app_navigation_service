name: Build service

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      checkout_source:
        description: "Checkout source (branch/commit)"
        required: true
        default: "main"
        type: string
      build_release:
        description: "Build release"
        required: true
        default: true
        type: boolean
      build_release_image:
        description: "Build release image (req. build release)"
        required: true
        default: true
        type: boolean

jobs:
  build:
    name: Build service
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: "Set configuration environment variables"
        env:
          DEPLOY: ${{ (vars.DEPLOY_ON_K8S == 'true' && github.ref_name == 'main' ) }}
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            #TODO: allow only owner
            export CONFIG_CHECKOUT_SOURCE=${{ inputs.checkout_source }}
            export CONFIG_BUILD_RELEASE=${{ inputs.build_release }}
            export CONFIG_BUILD_RELEASE_IMAGE=${{ inputs.build_release_image }}
          else
            export CONFIG_CHECKOUT_SOURCE=$GITHUB_SHA
            export CONFIG_BUILD_RELEASE=true
            export CONFIG_BUILD_RELEASE_IMAGE=true
          fi

          echo "CONFIG_CHECKOUT_SOURCE=$CONFIG_CHECKOUT_SOURCE" >> $GITHUB_ENV
          echo "CONFIG_BUILD_RELEASE=$CONFIG_BUILD_RELEASE" >> $GITHUB_ENV
          echo "CONFIG_BUILD_RELEASE_IMAGE=$CONFIG_BUILD_RELEASE_IMAGE" >> $GITHUB_ENV

          echo "Using configuration:"
          cat $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CONFIG_CHECKOUT_SOURCE }}

      - name: Build Release
        if: ${{ env.CONFIG_BUILD_RELEASE == 'true' }}
        run: |
          docker build --target build_release .
          docker build --target get_release_build . -o output/buildRel

      - name: Publish Release
        if: ${{ env.CONFIG_BUILD_RELEASE == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: map-app-navigation-service-rel
          path: output/buildRel

      - name: "Set release image name"
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_TAG=`git log -1 '--format=format:%H'`
          IMAGE_NAME="dummy_image:$IMAGE_TAG"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Build release image
        if: ${{ env.CONFIG_BUILD_RELEASE_IMAGE == 'true' }}
        run: |
          docker build --target runner -t $IMAGE_NAME .
